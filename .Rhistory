install.packages("VennDiagram")
library(VennDiagram)
knitr::opts_chunk$set(echo = TRUE)
# V: Anzahl der Elemente in den einzelnen Bereichen
venn.diagram(
x = list(
A = 1:100,
B = 90:150
),
category.names = c("Menge A", "Menge B"),
filename = 'venn_2_sets.png',
output=TRUE
)
#
# V: Anzahl der Elemente in den einzelnen Bereichen
venn.diagram(
x = list(
A = 1:100,
B = 90:150
),
category.names = c("Menge A", "Menge B"),
filename = 'venn_2_sets.png',
output=TRUE
)
#
# V: Anzahl der Elemente in den einzelnen Bereichen
library(VennDiagramm)
# 1. Erstellen Sie das Objekt und speichern Sie es (ohne es direkt in eine Datei zu schreiben)
venn_obj <- venn.diagram(
x = list(
A = 1:100,
B = 90:150
),
category.names = c("Menge A", "Menge B"),
# Wichtig: Speichern in einer temporären Datei, aber NICHT die Datei öffnen/schreiben lassen
filename = NULL, # WICHTIG: KEINEN Dateinamen angeben, damit es nicht extern gespeichert wird
output = TRUE
)
# 2. Zeichne das Objekt, damit es im R Markdown Output erscheint
grid.draw(venn_obj)
# 3. Optional: Löschen Sie das temporäre Objekt (außerhalb dieses Chunks)
# invisible(lapply(venn_obj, unlink))
#
knitr::opts_chunk$set(echo = TRUE)
library(VennDiagram)
library(grid)
# 1. Erstellen Sie das Objekt und speichern Sie es (ohne es direkt in eine Datei zu schreiben)
venn_obj <- venn.diagram(
x = list(
A = 1:100,
B = 90:150
),
category.names = c("Menge A", "Menge B"),
# Wichtig: Speichern in einer temporären Datei, aber NICHT die Datei öffnen/schreiben lassen
filename = NULL, # WICHTIG: KEINEN Dateinamen angeben, damit es nicht extern gespeichert wird
output = TRUE
)
# 2. Zeichne das Objekt, damit es im R Markdown Output erscheint
grid.draw(venn_obj)
# 3. Optional: Löschen Sie das temporäre Objekt (außerhalb dieses Chunks)
invisible(lapply(venn_obj, unlink))
#
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
D <- diamonds
D
head(D)
head(D,20)
dim(D)
head(D,10)
head(D,-20)
View(D)
View(D)
D$price[10]
D$price[1]
D$price[2]
D$price[3]
D$price[1:10]
D$price[-10:-1]
D$price[-2:-1]
D$price[-1:-2]
D$price[-1:5552]
D$price[53930:-1]
D$price[53930:53940]
D$price >= 10000
sum(D$price >= 10000)
sum(D$price >= 10000)/dim(D)[1]
